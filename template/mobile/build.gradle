buildscript {
    repositories {
        jcenter()
    }

    dependencies {
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.neenbedankt.android-apt'

def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

def gitCommits() {
    def command = new String[4]

    command[0] = "git"
    command[1] = "log"
    command[2] = "--pretty=format:%h - %an, %ar : %s"
    command[3] = "--since=1.days"

    return new ProcessBuilder(command).start().text
}

def svnCommits() {
    return 'svn log -l 10 ../'.execute().text.trim()
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId appId
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode appVersionMajor * 10000 + appVersionMinor * 1000 + appVersionPatch * 100 + appVersionBuild
        versionName "${appVersionMajor}.${appVersionMinor}.${appVersionPatch}, build ${gitSha()}"
        multiDexEnabled true
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        release {
        }

        debug {
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            signingConfig signingConfigs.release
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_revision_number", "${gitSha()}"
            ext.betaDistributionReleaseNotes = "Release Build v${appVersionMajor}.${appVersionMinor}.${appVersionPatch}\n\n${gitCommits()}"
            ext.betaDistributionGroupAliases = "group-name"
        }

        debug {
            minifyEnabled false
            debuggable true
            shrinkResources false
            signingConfig signingConfigs.debug
            resValue "string", "app_revision_number", "${gitSha()}"
            ext.betaDistributionReleaseNotes = "Debug Build v${appVersionMajor}.${appVersionMinor}.${appVersionPatch}\n\n${gitCommits()}"
            ext.betaDistributionGroupAliases = "group-name"
        }
    }

    productFlavors {
        development {
        }

        production {
        }
    }

    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g"
    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'doc/HOW_TO.TXT'
        exclude 'doc/README'
        exclude '.readme'
    }
}

dependencies {
    /**
     * Local libs and modules
     */
    compile fileTree(dir: 'libs', include: ['*.jar'])
    wearApp project(':wear')

    /**
     * ===============================================================
     * System Libraries
     * ===============================================================
     */

    /**
     * Support library
     */
    compile supportLibs.appCompat
    compile supportLibs.support13
    compile supportLibs.annotation
    compile supportLibs.palette
    compile supportLibs.recyclerView
    compile supportLibs.design
    compile supportLibs.cardView
    compile supportLibs.multidex

    /**
     * Play Services
     */
    compile playServicesLibs.base
    compile playServicesLibs.wearable
    compile playServicesLibs.location
    compile playServicesLibs.analytics

    /**
     * ===============================================================
     * Important third-party libs, this project generally depends on
     * ===============================================================
     */

    /**
     * GCM Support
     */
    compile playServicesLibs.gcm
    compile('eu.inloop:easygcm:1.6.2')

    /**
     * Reactive Extensions to JVM
     */
    compile 'io.reactivex:rxjava:1.1.4'
    compile 'io.reactivex:rxandroid:1.2.0'

    /**
     * Events Bus
     */
    compile 'org.greenrobot:eventbus:3.0.0'

    /**
     * Extended Logger
     */
    compile 'com.github.orhanobut:logger:1.12'

    /**
     * RoboTools General Utils Library
     */
    compile 'eu.livotov.labs.android:RoboToolsLibrary:3.0.4.2'

    /**
     * REST API Client
     */
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.0'

    /**
     * Image Loader Library
     */
    compile 'com.squareup.picasso:picasso:2.5.2'

    /**
     * Reactive Extension To Google Location Services
     */
    compile 'pl.charmas.android:android-reactive-location:0.8'

    /**
     * Annotation-based Processing Tools
     */
    compile 'com.jakewharton:butterknife:8.0.1'
    compile 'in.workarounds.bundler:bundler-annotations:0.1.1'
    compile 'in.workarounds.bundler:bundler-parceler:0.1.1'
    compile 'org.parceler:parceler-api:1.1.2'
    apt 'com.jakewharton:butterknife-compiler:8.0.1'
    apt 'in.workarounds.bundler:bundler-compiler:0.1.1'
    apt 'org.parceler:parceler:1.1.2'

    /**
     * MVP Support
     */
    compile 'eu.inloop:androidviewmodel:1.0.0'

    /**
     * Material Design Support and low-level UI libs
     */
    compile 'com.mikepenz:materialize:0.8.8'
    compile 'com.mikepenz:materialdrawer:5.3.0'
    compile 'com.roughike:bottom-bar:1.3.5'
    compile 'eu.davidea:flexible-adapter:5.0.0-b6'
    compile "com.daimajia.swipelayout:library:1.2.0"

    /**
     * UI Dialogs
     */
    compile 'com.kbeanie:multipicker:1.0.10'
    compile 'com.afollestad.material-dialogs:core:0.8.5.9'
    compile 'com.wdullaer:materialdatetimepicker:2.3.0'

    /**
     * ===============================================================
     * Tests
     * ===============================================================
     */
    testCompile 'junit:junit:4.12'
}

apply from: "${rootProject.projectDir}/config/signing.gradle"
