/**
 * Application release and debug builds signing configs.
 */

/**
 * 1. Define full pathname to your signing configuration file.
 * Ensure, it is (along with the keystore file) stored out of VCS root(s) and never committed to a version control system
 */
def signingPropsFile = System.getProperties().getProperty("user.home") + "/signing.properties"

/**
 * 2. Define the following properties in your signing configuration file specified above:
 *
 * STORE_FILE       Full path to your keystore file
 * STORE_PASSWORD   Password for your keystore file
 * KEY_ALIAS        Signing key alias
 * KEY_PASSWORD     Signing key password
 */
def Properties props = new Properties()
def propFile = new File(signingPropsFile)

/**
 * If steps 1 and 2 above are performed correctly, your debug and release build will be automatically signed with the specified key.
 * Otherwise both builds will not be signed.
 *
 * You can also customize the configuration script below to adjust to your specific needs, for instance, if you want to sign release
 * and debug builds
 */

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        android.signingConfigs.debug.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.debug.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.debug.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.debug.keyPassword = props['KEY_PASSWORD']
    } else {
        println "\n\n\nWARNING !!!\nMissing important entries in ${signingPropsFile} !\nEnsure you define STORE_FILE, STORE_PASSWORD, KEY_ALIAS and KEY_PASSWORD properties and they are valid !\n\n\n"
        android.buildTypes.release.signingConfig = null
    }
} else {
    println "\n\n\nWARNING !!!\nSigning configuration file is not set or not found: ${signingPropsFile}\n\n\n"
    android.buildTypes.release.signingConfig = null
}
