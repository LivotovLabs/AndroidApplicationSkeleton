buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
    }
}

repositories {
}


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.objectbox'

def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

def gitCommits() {
    def command = new String[4]

    command[0] = "git"
    command[1] = "log"
    command[2] = "--pretty=format:%h - %an, %ar : %s"
    command[3] = "--since=1.days"

    return new ProcessBuilder(command).start().text
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId appId
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode appVersionMajor * 10000 + appVersionMinor * 1000 + appVersionPatch * 100 + appVersionBuild
        versionName "${appVersionPrefix}${appVersionMajor}.${appVersionMinor}.${appVersionPatch}${appVersionSuffix}, build ${gitSha()}"
        multiDexEnabled true
        renderscriptTargetApi 25
        renderscriptSupportModeEnabled true
    }

    compileOptions {
        encoding "UTF-8"
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        release {
        }

        debug {
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            signingConfig signingConfigs.release
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_revision_number", "${gitSha()}"
            ext.betaDistributionReleaseNotes = "Release Build v${appVersionMajor}.${appVersionMinor}.${appVersionPatch}\n\n${gitCommits()}"
            ext.betaDistributionGroupAliases = "group-name"
        }

        debug {
            minifyEnabled false
            debuggable true
            shrinkResources false
            signingConfig signingConfigs.debug
            resValue "string", "app_revision_number", "${gitSha()}"
            ext.betaDistributionReleaseNotes = "Debug Build v${appVersionMajor}.${appVersionMinor}.${appVersionPatch}\n\n${gitCommits()}"
            ext.betaDistributionGroupAliases = "group-name"
        }
    }

    flavorDimensions "app"
    productFlavors {
        development {
            dimension "app"
        }

        production {
            dimension "app"
        }
    }

    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g"
    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'doc/HOW_TO.TXT'
        exclude 'doc/README'
        exclude '.readme'
    }
}

dependencies {
    /**
     * Local libs and modules
     */
    compile fileTree(dir: 'libs', include: ['*.jar'])

    /**
     * ===============================================================
     * System Libraries
     * ===============================================================
     */

    /**
     * Support library
     */
    compile supportLibs.appCompat
    compile supportLibs.support13
    compile supportLibs.annotation
    compile supportLibs.palette
    compile supportLibs.recyclerView
    compile supportLibs.design
    compile supportLibs.cardView
    compile supportLibs.multidex
    compile supportLibs.percent

    /**
     * Play Services
     */
    compile playServicesLibs.base
    compile playServicesLibs.wearable
    compile playServicesLibs.location
    compile playServicesLibs.places
    compile playServicesLibs.analytics

    /**
     * FCM Support
     */
    compile firebaseLibs.core
    compile firebaseLibs.messaging

    /**
     * Kotlin exts
     */
    implementation "org.jetbrains.anko:anko:$ankoVersion"
    implementation 'androidx.core:core-ktx:0.3'
    implementation 'me.eugeniomarletti:android-extras-delegates:1.0.5'
    implementation 'com.github.rubengees:kotterknife:1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    /**
     * ===============================================================
     * Important third-party libs, this project generally depends on
     * ===============================================================
    */

    /**
     * Embedded DB
     */
    compile "io.objectbox:objectbox-android:$objectboxVersion"
    kapt "io.objectbox:objectbox-processor:$objectboxVersion"

    /**
     * Reactive Extensions to JVM
     */
    compile "io.reactivex.rxjava2:rxjava:2.1.13"
    compile 'io.reactivex.rxjava2:rxandroid:2.0.2'

    /**
     * Events Bus
     */
    compile 'org.greenrobot:eventbus:3.1.1'

    /**
     * Encryption and biometry
     */
    compile 'com.mtramin:rxfingerprint:2.2.1' // https://github.com/Mauin/RxFingerprint

    /**
     * REST API Client
     */
    compile('com.squareup.retrofit2:retrofit:2.3.0')
            {
                exclude module: 'okhttp'
                exclude module: 'okhttp3'
            }
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp3:okhttp:3.10.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    /**
     * Image Loader - http://bumptech.github.io/glide/doc/getting-started.html , RecyclerView notes: http://bumptech.github.io/glide/int/recyclerview.html
     */
    compile 'com.github.bumptech.glide:glide:4.6.1'
    kapt 'com.github.bumptech.glide:compiler:4.6.1'
    compile "com.github.bumptech.glide:okhttp3-integration:4.5.0"
    compile("com.github.bumptech.glide:recyclerview-integration:4.5.0") {
        transitive = false
    }

    /**
     * Reactive Extension To Google Location Services
     */
    compile 'com.patloew.rxlocation:rxlocation:1.0.4'

    /**
     * Annotation-based Processing Tools
     */
    compile 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'

    compile 'in.workarounds.bundler:bundler-annotations:0.1.1'
    compile 'in.workarounds.bundler:bundler-parceler:0.1.1'
    kapt 'in.workarounds.bundler:bundler-compiler:0.1.1'

    compile 'org.parceler:parceler-api:1.1.10'
    kapt 'org.parceler:parceler:1.1.10'

    compile 'com.github.hotchemi:permissionsdispatcher:3.2.0'
    kapt 'com.github.hotchemi:permissionsdispatcher-processor:3.2.0'

    /**
     * MVP Support
     */
    compile 'com.arello-mobile:moxy:1.5.3'
    compile 'com.arello-mobile:moxy-android:1.5.3'
    compile 'com.arello-mobile:moxy-app-compat:1.5.3'
    kapt 'com.arello-mobile:moxy-compiler:1.5.3'

    /**
     * Material Design Support and low-level UI libs
     */
    compile 'com.dmitrymalkovich.android:material-design-dimens:1.4'
    compile 'com.mikepenz:materialize:1.1.2'
    compile 'com.mikepenz:materialdrawer:6.0.6'
    compile 'com.roughike:bottom-bar:2.3.1'
    compile 'eu.davidea:flexible-adapter:5.0.3'
    compile "com.daimajia.swipelayout:library:1.2.0"
    compile "com.andkulikov:transitionseverywhere:1.7.9"

    /**
     * UI Dialogs
     */
    compile 'com.kbeanie:multipicker:1.1.31'
    compile 'com.afollestad.material-dialogs:core:0.9.6.0'
    compile 'com.wdullaer:materialdatetimepicker:3.5.0'

    /**
     * Image Widgets
     */
    compile 'com.theartofdev.edmodo:android-image-cropper:2.6.0'
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.9.0'

    /**
     * UI Widgets
     */
    compile 'com.rengwuxian.materialedittext:library:2.1.4'
    compile 'com.miguelcatalan:materialsearchview:1.4.0'

    /**
     * ===============================================================
     * Tests
     * ===============================================================
     */
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

apply from: "${rootProject.projectDir}/config/signing.gradle"
apply plugin: 'com.google.gms.google-services'
